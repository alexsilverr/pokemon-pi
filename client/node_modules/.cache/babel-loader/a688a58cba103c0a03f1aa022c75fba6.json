{"ast":null,"code":"import axios from 'axios';\nexport const GETPOKEMON = 'GETPOKEMON';\nexport const GETPOKEMONAME = 'GETPOKEMONAME';\nexport const GETPOKEMONID = 'GETPOKEMONID';\nexport const GETPOKEMONTYPE = 'GETPOKEMONTYPE';\nexport const GETPOKEMONTEAM = 'GETPOKEMONTEAM';\nexport const getPokemon = () => async (dispatch, getState) => {\n  try {\n    const response = await axios.get(`http://localhost:3001/pokemons/`);\n    const pokemons = response.data.results;\n    const pokemonsData = await Promise.all(pokemons.map(async pokemon => {\n      const res = await axios.get(pokemon.url);\n      const todos = [];\n      return todos.push = {\n        id: res.data.id,\n        name: res.data.name,\n        height: res.data.height,\n        weight: res.data.weight,\n        types: res.data.types.map(type => type.type.name),\n        img: res.data.sprites.other.home.front_default,\n        characters: res.data.stats.map(stat => {\n          return {\n            name: stat.stat.name,\n            value: stat.base_stat\n          };\n        })\n      };\n    }));\n    dispatch({\n      type: \"GETPOKEMON\",\n      payload: pokemonsData\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonName = name => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:3001/pokemons/?base=${2}`);\n    const team = res.data;\n    const response = await axios.get(`http://localhost:3001/pokemons?name=${name}`);\n    const data = response.data;\n    dispatch({\n      type: \"GETPOKEMONAME\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonId = id => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/pokemons/:id?id=${id}`);\n    const data = response.data.results;\n    console.log(data);\n    dispatch({\n      type: \"GETPOKEMONID\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonType = () => async dispatch => {\n  try {\n    const response = await axios.get('http://localhost:3001/types');\n    const type = response.data;\n    console.log(type);\n    dispatch({\n      type: GETPOKEMONTYPE,\n      payload: type\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonBase = num => async dispatch => {\n  try {\n    const bs = parseInt(num);\n    console.log(bs);\n    const response = await axios.get(`http://localhost:3001/pokemons/?base=${bs}`);\n    const team = response.data;\n    console.log(team);\n    dispatch({\n      type: GETPOKEMONTEAM,\n      payload: team\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","GETPOKEMON","GETPOKEMONAME","GETPOKEMONID","GETPOKEMONTYPE","GETPOKEMONTEAM","getPokemon","dispatch","getState","response","get","pokemons","data","results","pokemonsData","Promise","all","map","pokemon","res","url","todos","push","id","name","height","weight","types","type","img","sprites","other","home","front_default","characters","stats","stat","value","base_stat","payload","error","console","log","getPokemonName","team","getPokemonId","getPokemonType","getPokemonBase","num","bs","parseInt"],"sources":["C:/Users/Alexander/Desktop/PI-Pokemon-main/client/src/Store/action.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GETPOKEMON='GETPOKEMON'\r\nexport const GETPOKEMONAME='GETPOKEMONAME'\r\nexport const GETPOKEMONID='GETPOKEMONID'\r\nexport const GETPOKEMONTYPE='GETPOKEMONTYPE'\r\nexport const GETPOKEMONTEAM='GETPOKEMONTEAM'\r\n\r\n\r\n\r\nexport const getPokemon =() => async (dispatch,getState) => {\r\n    try {\r\n     \r\n      \r\n      const response = await axios.get(`http://localhost:3001/pokemons/`);\r\n      const pokemons = response.data.results;\r\n      const pokemonsData = await Promise.all(pokemons.map(async pokemon => {\r\n        const res = await axios.get(pokemon.url);\r\n        const todos=[]\r\n        return todos.push={\r\n          id: res.data.id,\r\n          name: res.data.name,\r\n          height: res.data.height,\r\n          weight: res.data.weight,\r\n          types: res.data.types.map(type => type.type.name),\r\n          img: res.data.sprites.other.home.front_default,\r\n          characters: res.data.stats.map(stat => {\r\n            return {name: stat.stat.name , value: stat.base_stat}\r\n          })\r\n\r\n          \r\n        \r\n          \r\n        }\r\n\r\n        \r\n      }));\r\n      \r\n      \r\n      dispatch({\r\n        type: \"GETPOKEMON\",\r\n        payload: pokemonsData,\r\n      });\r\n      \r\n      \r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\nexport const getPokemonName=(name) => async (dispatch) => {\r\n    try {\r\n      \r\n      const res = await axios.get(`http://localhost:3001/pokemons/?base=${2}`);\r\n      const team = res.data;\r\n      const response = await axios.get(`http://localhost:3001/pokemons?name=${name}`);\r\n      const data = response.data;\r\n      \r\n      dispatch({\r\n        type: \"GETPOKEMONAME\",\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\nexport const getPokemonId=(id) => async (dispatch)=>{ \r\n    try {\r\n        const response = await axios.get(`http://localhost:3001/pokemons/:id?id=${id}`);\r\n        const data = response.data.results;\r\n        console.log(data);\r\n        dispatch({\r\n         type: \"GETPOKEMONID\",\r\n         payload: data,\r\n       });\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n   \r\n  }\r\nexport const getPokemonType=()=>async(dispatch)=>{ \r\n  try {\r\n      \r\n    const response = await axios.get('http://localhost:3001/types');\r\n    const type = response.data;\r\n    console.log(type)\r\n    \r\n    \r\n    dispatch({\r\n      type: GETPOKEMONTYPE,\r\n      payload: type,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getPokemonBase=(num)=>async(dispatch)=>{ \r\n  try {\r\n         const bs=parseInt(num) \r\n         console.log(bs)\r\n    const response = await axios.get(`http://localhost:3001/pokemons/?base=${bs}`);\r\n    const team = response.data;\r\n    console.log(team)\r\n    \r\n    \r\n    dispatch({\r\n      type: GETPOKEMONTEAM,\r\n      payload:team ,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n  \r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAC,YAAY;AACpC,OAAO,MAAMC,aAAa,GAAC,eAAe;AAC1C,OAAO,MAAMC,YAAY,GAAC,cAAc;AACxC,OAAO,MAAMC,cAAc,GAAC,gBAAgB;AAC5C,OAAO,MAAMC,cAAc,GAAC,gBAAgB;AAI5C,OAAO,MAAMC,UAAU,GAAE,MAAM,OAAOC,QAAQ,EAACC,QAAQ,KAAK;EACxD,IAAI;IAGF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,iCAAgC,CAAC;IACnE,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO;IACtC,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,GAAG,CAAC,MAAMC,OAAO,IAAI;MACnE,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACU,GAAG,CAACQ,OAAO,CAACE,GAAG,CAAC;MACxC,MAAMC,KAAK,GAAC,EAAE;MACd,OAAOA,KAAK,CAACC,IAAI,GAAC;QAChBC,EAAE,EAAEJ,GAAG,CAACP,IAAI,CAACW,EAAE;QACfC,IAAI,EAAEL,GAAG,CAACP,IAAI,CAACY,IAAI;QACnBC,MAAM,EAAEN,GAAG,CAACP,IAAI,CAACa,MAAM;QACvBC,MAAM,EAAEP,GAAG,CAACP,IAAI,CAACc,MAAM;QACvBC,KAAK,EAAER,GAAG,CAACP,IAAI,CAACe,KAAK,CAACV,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACA,IAAI,CAACJ,IAAI,CAAC;QACjDK,GAAG,EAAEV,GAAG,CAACP,IAAI,CAACkB,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,aAAa;QAC9CC,UAAU,EAAEf,GAAG,CAACP,IAAI,CAACuB,KAAK,CAAClB,GAAG,CAACmB,IAAI,IAAI;UACrC,OAAO;YAACZ,IAAI,EAAEY,IAAI,CAACA,IAAI,CAACZ,IAAI;YAAGa,KAAK,EAAED,IAAI,CAACE;UAAS,CAAC;QACvD,CAAC;MAKH,CAAC;IAGH,CAAC,CAAC,CAAC;IAGH/B,QAAQ,CAAC;MACPqB,IAAI,EAAE,YAAY;MAClBW,OAAO,EAAEzB;IACX,CAAC,CAAC;EAIJ,CAAC,CAAC,OAAO0B,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AACH,OAAO,MAAMG,cAAc,GAAEnB,IAAI,IAAK,MAAOjB,QAAQ,IAAK;EACtD,IAAI;IAEF,MAAMY,GAAG,GAAG,MAAMnB,KAAK,CAACU,GAAG,CAAE,wCAAuC,CAAE,EAAC,CAAC;IACxE,MAAMkC,IAAI,GAAGzB,GAAG,CAACP,IAAI;IACrB,MAAMH,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,uCAAsCc,IAAK,EAAC,CAAC;IAC/E,MAAMZ,IAAI,GAAGH,QAAQ,CAACG,IAAI;IAE1BL,QAAQ,CAAC;MACPqB,IAAI,EAAE,eAAe;MACrBW,OAAO,EAAE3B;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAO4B,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AACH,OAAO,MAAMK,YAAY,GAAEtB,EAAE,IAAK,MAAOhB,QAAQ,IAAG;EAChD,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,yCAAwCa,EAAG,EAAC,CAAC;IAC/E,MAAMX,IAAI,GAAGH,QAAQ,CAACG,IAAI,CAACC,OAAO;IAClC4B,OAAO,CAACC,GAAG,CAAC9B,IAAI,CAAC;IACjBL,QAAQ,CAAC;MACRqB,IAAI,EAAE,cAAc;MACpBW,OAAO,EAAE3B;IACX,CAAC,CAAC;EACL,CAAC,QAAO4B,KAAK,EAAC;IACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AAEF,CAAC;AACH,OAAO,MAAMM,cAAc,GAAC,MAAI,MAAMvC,QAAQ,IAAG;EAC/C,IAAI;IAEF,MAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;IAC/D,MAAMkB,IAAI,GAAGnB,QAAQ,CAACG,IAAI;IAC1B6B,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;IAGjBrB,QAAQ,CAAC;MACPqB,IAAI,EAAExB,cAAc;MACpBmC,OAAO,EAAEX;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AACD,OAAO,MAAMO,cAAc,GAAEC,GAAG,IAAG,MAAMzC,QAAQ,IAAG;EAClD,IAAI;IACG,MAAM0C,EAAE,GAACC,QAAQ,CAACF,GAAG,CAAC;IACtBP,OAAO,CAACC,GAAG,CAACO,EAAE,CAAC;IACpB,MAAMxC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,wCAAuCuC,EAAG,EAAC,CAAC;IAC9E,MAAML,IAAI,GAAGnC,QAAQ,CAACG,IAAI;IAC1B6B,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IAGjBrC,QAAQ,CAAC;MACPqB,IAAI,EAAEvB,cAAc;MACpBkC,OAAO,EAACK;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}