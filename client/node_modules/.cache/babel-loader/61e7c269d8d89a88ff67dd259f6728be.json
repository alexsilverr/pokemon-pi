{"ast":null,"code":"import axios from 'axios';\nexport const GETPOKEMON = 'GETPOKEMON';\nexport const GETPOKEMONAME = 'GETPOKEMONAME';\nexport const GETPOKEMONID = 'GETPOKEMONID';\nexport const GETPOKEMONTYPE = 'GETPOKEMONTYPE';\nexport const GETPOKEMONTEAM = 'GETPOKEMONTEAM';\nexport const getPokemon = () => async (dispatch, getState) => {\n  try {\n    const response = await axios.get('http://localhost:3001/pokemons/');\n    const pokemons = response.data.results;\n    const pokemonsData = await Promise.all(pokemons.map(async pokemon => {\n      const res = await axios.get(pokemon.url);\n      const todos = [];\n      return todos.push = {\n        id: res.data.id,\n        name: res.data.name,\n        height: res.data.height,\n        weight: res.data.weight,\n        types: res.data.types.map(_ref => {\n          let {\n            type\n          } = _ref;\n          return type.name;\n        }),\n        img: res.data.sprites.other.home.front_default,\n        stats: res.data.stats.map(_ref2 => {\n          let {\n            stat,\n            base_stat\n          } = _ref2;\n          return {\n            name: stat.name,\n            value: base_stat\n          };\n        })\n      };\n    }));\n    dispatch({\n      type: \"GETPOKEMON\",\n      payload: pokemonsData\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonName = name => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/pokemons/${name}`);\n    const data = response.data;\n    dispatch({\n      type: \"GETPOKEMON\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonId = id => async dispatch => {\n  try {\n    if (id.length > 3) {\n      const base = await axios.get(`http://localhost:3001/pokemons/team`);\n      console.log(base.data.filter(e => e.id === id));\n      dispatch({\n        type: \"GETPOKEMONID\",\n        payload: base.data.filter(e => e.id === id)\n      });\n    } else {\n      const response = await axios.get(`http://localhost:3001/pokemons/${id}`);\n      const data = response.data;\n      dispatch({\n        type: \"GETPOKEMONID\",\n        payload: data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonType = () => async dispatch => {\n  try {\n    const response = await axios.get('http://localhost:3001/types');\n    const type = response.data;\n    dispatch({\n      type: GETPOKEMONTYPE,\n      payload: type\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPokemonBase = () => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/pokemons/team`);\n    dispatch({\n      type: GETPOKEMONTEAM,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","GETPOKEMON","GETPOKEMONAME","GETPOKEMONID","GETPOKEMONTYPE","GETPOKEMONTEAM","getPokemon","dispatch","getState","response","get","pokemons","data","results","pokemonsData","Promise","all","map","pokemon","res","url","todos","push","id","name","height","weight","types","type","img","sprites","other","home","front_default","stats","stat","base_stat","value","payload","error","console","log","getPokemonName","getPokemonId","length","base","filter","e","getPokemonType","getPokemonBase"],"sources":["C:/Users/Alexander/Desktop/pok-pi/client/src/Store/action.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GETPOKEMON='GETPOKEMON'\r\nexport const GETPOKEMONAME='GETPOKEMONAME'\r\nexport const GETPOKEMONID='GETPOKEMONID'\r\nexport const GETPOKEMONTYPE='GETPOKEMONTYPE'\r\nexport const GETPOKEMONTEAM='GETPOKEMONTEAM'\r\n\r\nexport const getPokemon =() => async (dispatch,getState) => {\r\n  try {\r\n   \r\n    \r\n    const response = await axios.get('http://localhost:3001/pokemons/');\r\n    const pokemons = response.data.results;\r\n    const pokemonsData = await Promise.all(pokemons.map(async pokemon => {\r\n      const res = await axios.get(pokemon.url);\r\n      const todos=[]\r\n      return todos.push={\r\n        id: res.data.id,\r\n        name: res.data.name,\r\n        height: res.data.height,\r\n        weight: res.data.weight,\r\n        types: res.data.types.map(({ type }) => type.name),\r\n        img: res.data.sprites.other.home.front_default,\r\n        stats: res.data.stats.map(({ stat, base_stat }) => ({ name: stat.name, value: base_stat })),\r\n\r\n        \r\n      \r\n        \r\n      }\r\n\r\n      \r\n    }));\r\n    \r\n    dispatch({\r\n      type: \"GETPOKEMON\",\r\n      payload: pokemonsData,\r\n    });\r\n    \r\n    \r\n    \r\n    \r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPokemonName=(name) => async (dispatch) => {\r\n    try {\r\n      \r\n  \r\n      const response = await axios.get(`http://localhost:3001/pokemons/${name}`);\r\n      const data = response.data;\r\n      \r\n      dispatch({\r\n        type: \"GETPOKEMON\",\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\nexport const getPokemonId=(id) => async (dispatch)=>{ \r\n    try {\r\n    if(id.length>3){\r\n      const base = await axios.get(`http://localhost:3001/pokemons/team`);\r\n      console.log(base.data.filter(e=>e.id === id));\r\n      dispatch({\r\n        type: \"GETPOKEMONID\",\r\n        payload: base.data.filter(e=>e.id === id),\r\n      });\r\n    }else{\r\n      const response = await axios.get(`http://localhost:3001/pokemons/${id}`);\r\n      const data = response.data;\r\n      \r\n      dispatch({\r\n       type: \"GETPOKEMONID\",\r\n       payload: data,\r\n     });\r\n    }\r\n      \r\n     \r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n   \r\n  }\r\nexport const getPokemonType=()=>async(dispatch)=>{ \r\n  try {\r\n      \r\n    const response = await axios.get('http://localhost:3001/types');\r\n    const type = response.data;\r\n    \r\n    \r\n    \r\n    dispatch({\r\n      type: GETPOKEMONTYPE,\r\n      payload: type,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPokemonBase=()=>async(dispatch)=>{ \r\n  try {\r\n        \r\n    const response = await axios.get(`http://localhost:3001/pokemons/team`);\r\n    \r\n\r\n    dispatch({\r\n      type: GETPOKEMONTEAM,\r\n      payload:response.data ,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}