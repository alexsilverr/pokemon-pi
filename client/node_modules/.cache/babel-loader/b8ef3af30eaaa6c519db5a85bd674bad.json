{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\PI-Pokemon-main\\\\client\\\\src\\\\componentes\\\\PokemonGrid.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPokemonName, getPokemonType, getPokemon } from \"../Store/action\";\nimport './pokemon.css';\nimport PokemonCard from \"./PokemonCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PokemonGrid(_ref) {\n  _s();\n  let {\n    pokemonList\n  } = _ref;\n  //llamamos a la base de datos de la api , la creada y por ultimo a todos\n  const pokemones = useSelector(store => store.pokemon.pokemons);\n  const teamPok = useSelector(store => store.pokemon.team);\n  console.log(teamPok);\n  const allPokemon = pokemones.concat(teamPok);\n  const dispatch = useDispatch();\n  console.log(allPokemon);\n  const [state, setstate] = useState([]);\n  const [busque, setBusq] = useState('');\n  const [refresh, setFreshen] = useState({\n    Type: '',\n    Ordenar: ''\n  });\n\n  // setiamos con los pokemones de la base de datos api \n  useEffect(() => {\n    setstate(pokemones);\n  }, []);\n  // filtro a la base de datos\n  // const tipos=(e)=>{\n  //     console.log(e.target.value)\n  //        const  typesToFilter=[e.target.value]\n  //        setstate(state.filter(pokemon => \n  //             typesToFilter.some(type => pokemon.types.includes(type))\n  //           ))\n\n  // }\n  // const bb=(e)=>{\n  //   const ord =e.target.value\n  //   if(ord==='1'){\n  //     setstate(pokemones)\n  //   }\n  //   if(ord==='2'){\n  //     setstate(teamPok)\n  //   }\n  //   if(ord==='3'){\n  //     setstate(allPokemon)\n  //   }\n\n  // }\n  // const order=(e)=>{\n  //     const ord =e.target.value\n  //     if(ord ==='A-Z'){\n  //         setstate(state.map(e=>e).sort(function (a, b) {\n  //             if (a.name > b.name) {\n  //               return -1;\n  //             }\n  //             if (a.name < b.name) {\n  //               return 1;\n  //             }\n\n  //             return 0;\n  //           }))\n  //     }\n  //     if(ord ==='Z-A'){\n  //         setstate(state.map(e=>e).sort(function (a, b) {\n  //             if (a.name < b.name) {\n  //               return -1;\n  //             }\n  //             if (a.name > b.name) {\n  //               return 1;\n  //             }\n  //             // a must be equal to b\n  //             return 0;\n  //           }))\n  //     }\n  //     if(ord ==='fuerza+'){\n\n  //         setstate(state.sort(function (a, b) {\n\n  //           if (a.characters[1]['value'] < b.characters[1]['value'] ) {\n\n  //             return -1;\n  //           }\n  //           if (a.characters[1]['value']  > b.characters[1]['value'] ) {\n  //             return 1;\n  //           }\n\n  //           return 0;\n  //         }))\n\n  //     }\n  //     if(ord ==='fuerza-'){\n\n  //       setstate(state.sort(function (a, b) {\n\n  //         if (a.characters[1]['value'] < b.characters[1]['value'] ) {\n\n  //           return -1;\n  //         }\n  //         if (a.characters[1]['value']  > b.characters[1]['value'] ) {\n  //           return 1;\n  //         }\n\n  //         return 0;\n  //       }))\n  //     }\n  // }\n  // const resetFilters = () => {\n\n  //   dispatch(getPokemon())\n  //   setstate(pokemones)\n  //   setFreshen({\n  //   type: '',\n  //   order:'',\n  //   attack: ''\n  //   });\n  //   setBusq('');\n  //   }\n\n  // const handleInputChange = (e) => {\n  //   e.preventDefault();\n  //   const name=state.filter(pokemon => pokemon.name===busque)\n  //   if(name.length===0) return <p>no se encuentra el pokemon</p>\n  //     setstate(name)\n  //   console.log(state.filter(pokemon => pokemon.name===busque))\n\n  // };\n\n  // paginado\n  const pageSize = 12;\n  const [currentPage, setCurrentPage] = useState(1);\n  function handleNextPage() {\n    setCurrentPage(currentPage + 1);\n  }\n  function handlePreviousPage() {\n    setCurrentPage(currentPage - 1);\n  }\n  const startIndex = (currentPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  console.log(state);\n  if (state.length === 0) console.log('not data');\n  const pageOfPokemon = state && state.slice(startIndex, endIndex);\n  console.log(pageOfPokemon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"box\",\n      children: pageOfPokemon && pageOfPokemon.map(i => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        name: i.name,\n        tipos: i.types,\n        image: i.img\n      }, i.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: currentPage === 1,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: endIndex >= state.length,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonGrid, \"gV4aXb2LHsvLhduSO19pIrMuCH0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = PokemonGrid;\n;\nvar _c;\n$RefreshReg$(_c, \"PokemonGrid\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","getPokemonName","getPokemonType","getPokemon","PokemonCard","PokemonGrid","pokemonList","pokemones","store","pokemon","pokemons","teamPok","team","console","log","allPokemon","concat","dispatch","state","setstate","busque","setBusq","refresh","setFreshen","Type","Ordenar","pageSize","currentPage","setCurrentPage","handleNextPage","handlePreviousPage","startIndex","endIndex","length","pageOfPokemon","slice","map","i","name","types","img","id"],"sources":["C:/Users/Alexander/Desktop/PI-Pokemon-main/client/src/componentes/PokemonGrid.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { getPokemonName,getPokemonType,getPokemon} from \"../Store/action\";\r\n\r\n\r\nimport './pokemon.css';\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\n\r\nexport function PokemonGrid({ pokemonList }){\r\n  //llamamos a la base de datos de la api , la creada y por ultimo a todos\r\n    const pokemones=useSelector(store =>store.pokemon.pokemons)\r\n    const teamPok=useSelector(store=>store.pokemon.team)\r\n    console.log(teamPok)\r\n    const allPokemon= pokemones.concat(teamPok)\r\n    const dispatch=useDispatch();\r\n    console.log(allPokemon)\r\n   \r\n    const [state, setstate] = useState([]);\r\n    const [busque, setBusq] = useState('');\r\n    const [refresh,setFreshen] = useState({\r\n      Type:'',\r\n      Ordenar:'',\r\n\r\n    });\r\n    \r\n    \r\n    // setiamos con los pokemones de la base de datos api \r\n    useEffect(() => {\r\n        \r\n     \r\n        setstate(pokemones)\r\n        \r\n       \r\n      },[]);\r\n    // filtro a la base de datos\r\n    // const tipos=(e)=>{\r\n    //     console.log(e.target.value)\r\n    //        const  typesToFilter=[e.target.value]\r\n    //        setstate(state.filter(pokemon => \r\n    //             typesToFilter.some(type => pokemon.types.includes(type))\r\n    //           ))\r\n\r\n    // }\r\n    // const bb=(e)=>{\r\n    //   const ord =e.target.value\r\n    //   if(ord==='1'){\r\n    //     setstate(pokemones)\r\n    //   }\r\n    //   if(ord==='2'){\r\n    //     setstate(teamPok)\r\n    //   }\r\n    //   if(ord==='3'){\r\n    //     setstate(allPokemon)\r\n    //   }\r\n      \r\n    // }\r\n    // const order=(e)=>{\r\n    //     const ord =e.target.value\r\n    //     if(ord ==='A-Z'){\r\n    //         setstate(state.map(e=>e).sort(function (a, b) {\r\n    //             if (a.name > b.name) {\r\n    //               return -1;\r\n    //             }\r\n    //             if (a.name < b.name) {\r\n    //               return 1;\r\n    //             }\r\n                \r\n    //             return 0;\r\n    //           }))\r\n    //     }\r\n    //     if(ord ==='Z-A'){\r\n    //         setstate(state.map(e=>e).sort(function (a, b) {\r\n    //             if (a.name < b.name) {\r\n    //               return -1;\r\n    //             }\r\n    //             if (a.name > b.name) {\r\n    //               return 1;\r\n    //             }\r\n    //             // a must be equal to b\r\n    //             return 0;\r\n    //           }))\r\n    //     }\r\n    //     if(ord ==='fuerza+'){\r\n            \r\n         \r\n            \r\n    //         setstate(state.sort(function (a, b) {\r\n              \r\n    //           if (a.characters[1]['value'] < b.characters[1]['value'] ) {\r\n                \r\n                \r\n    //             return -1;\r\n    //           }\r\n    //           if (a.characters[1]['value']  > b.characters[1]['value'] ) {\r\n    //             return 1;\r\n    //           }\r\n              \r\n    //           return 0;\r\n    //         }))\r\n            \r\n    //     }\r\n    //     if(ord ==='fuerza-'){\r\n            \r\n    //       setstate(state.sort(function (a, b) {\r\n            \r\n    //         if (a.characters[1]['value'] < b.characters[1]['value'] ) {\r\n              \r\n              \r\n    //           return -1;\r\n    //         }\r\n    //         if (a.characters[1]['value']  > b.characters[1]['value'] ) {\r\n    //           return 1;\r\n    //         }\r\n            \r\n    //         return 0;\r\n    //       }))\r\n    //     }\r\n    // }\r\n    // const resetFilters = () => {\r\n      \r\n    //   dispatch(getPokemon())\r\n    //   setstate(pokemones)\r\n    //   setFreshen({\r\n    //   type: '',\r\n    //   order:'',\r\n    //   attack: ''\r\n    //   });\r\n    //   setBusq('');\r\n    //   }\r\n \r\n    // const handleInputChange = (e) => {\r\n    //   e.preventDefault();\r\n    //   const name=state.filter(pokemon => pokemon.name===busque)\r\n    //   if(name.length===0) return <p>no se encuentra el pokemon</p>\r\n    //     setstate(name)\r\n    //   console.log(state.filter(pokemon => pokemon.name===busque))\r\n      \r\n    // };\r\n     \r\n  // paginado\r\n   const pageSize = 12;\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n        \r\n    function handleNextPage() {\r\n    setCurrentPage(currentPage + 1);\r\n   }\r\n\r\n    function handlePreviousPage() {\r\n    setCurrentPage(currentPage - 1);\r\n   } \r\n   \r\n    \r\n      const startIndex = (currentPage - 1) * pageSize;\r\n      const endIndex = startIndex + pageSize;\r\n      console.log(state)\r\n      if(state.length===0)console.log('not data')\r\n      const pageOfPokemon  = state&&state.slice(startIndex, endIndex);  \r\n      console.log(pageOfPokemon)\r\n   \r\n  \r\n   \r\n      \r\n\r\n     \r\n\r\n    return(\r\n        <div className=\"box\"> \r\n          {/* <select name=\"creado\" onChange={bb}>\r\n          <option value=\"1\">API</option>\r\n          <option value=\"2\">BASE-DATOS</option>\r\n          <option value=\"3\">ALL</option>\r\n        </select> \r\n          <select  name=\"Type\" onChange={tipos}>\r\n          <option value=\"\">Tipo:</option>\r\n          <option value=\"normal\">normal</option>\r\n          <option value=\"fighting\">fighting</option>\r\n          <option value=\"flying\">flying</option>\r\n          <option value=\"poison\">poison</option>\r\n          <option value=\"ground\">ground</option>\r\n          <option value=\"rock\">rock</option>\r\n          <option value=\"bug\">bug</option>\r\n          <option value=\"ghost\">ghost</option>\r\n          <option value=\"steel\">steel</option>\r\n          <option value=\"fire\">fire</option>\r\n          <option value=\"water\">water</option>\r\n          <option value=\"grass\">grass</option>\r\n          <option value=\"electric\">electric</option>\r\n          <option value=\"psychic\">psychic</option>\r\n          <option value=\"ice\">ice</option>\r\n          <option value=\"dragon\">dragon</option>\r\n          <option value=\"dark\">dark</option>\r\n          <option value=\"fairy\">fairy</option>\r\n          <option value=\"unknown\">unknown</option>\r\n          <option value=\"shadow\">shadow</option>\r\n          \r\n        </select> \r\n        <select name=\"Ordenar\"  onChange={order}>\r\n          <option value=\"\">Ordenar</option>\r\n          <option value=\"A-Z\">Z-A</option>\r\n          <option value=\"Z-A\">A-Z</option>\r\n          <option value=\"fuerza+\">MAX-FUERZA</option>\r\n          <option value=\"fuerza-\">MIN-FUERZA</option>\r\n        </select>\r\n        <button onClick={resetFilters}>Refrescar</button>\r\n        <form  onSubmit={handleInputChange}>\r\n          <input type=\"text\"  onChange={e => setBusq(e.target.value)} placeholder=\"       P O K E M 0 N \" />\r\n          <button className='boton-creacion' type=\"submit\">Submit</button>\r\n        </form> */}\r\n        \r\n            <ul className=\"box\">\r\n                { \r\n                  pageOfPokemon&&\r\n                  pageOfPokemon.map((i) => <PokemonCard key={i.id}\r\n                     \r\n                    name={i.name}\r\n                    tipos={i.types}\r\n                    image={i.img}/> )              \r\n                }\r\n            </ul>\r\n            <div>\r\n            <button onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n             Anterior\r\n            </button>\r\n            <button onClick={handleNextPage} disabled={endIndex >= state.length}>\r\n             Siguiente\r\n            </button> \r\n           </div>\r\n          \r\n     </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}